<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.UserRole.mapper.UserMapper">

  <resultMap id="userMap" type="com.UserRole.model.User">    
    <result column="user_id" 			property="userId" />
    <result column="login_id" 			property="loginId" />
    <result column="user_name"  		property="username" />
    <result column="department" 		property="department" />
    <result column="email"  			property="email" />
    <result column="mobile" 			property="mobile" />
    <result column="state"  			property="state" />
    <result column="last_login_time"  	property="lastLoginTime" />
    <result column="create_time"  		property="createTime" />
    <result column="modify_time"  		property="modifyTime" />    
    <result column="role_name"  		property="roleName" />
  </resultMap>
  
  <resultMap id="roleMap" type="com.UserRole.model.Role">    
    <result column="role_id"  	property="roleId" />
    <result column="role_name"  property="roleName" />
    <result column="state" 		property="state" />
  </resultMap>
   
    
  <resultMap id="userRoleMap" type="com.UserRole.model.UserRole">   
    <result column="user_role_id" 	property="userRoleId" />
    <result column="user_id" 		property="userId" />
    <result column="role_id" 		property="roleId" />
  </resultMap>
  
  
  <insert id="insert" parameterType="com.UserRole.model.User">
   
    insert into user (user_id, login_id, user_name, department, email, mobile, state, last_login_time, create_time, modify_time)
    values (#{userId}, #{loginId}, #{username},#{department},#{email},#{mobile},#{state},#{lastLoginTime},#{createTime},#{roleName})
  </insert>
  
  <sql id="find_xxx">
  		<![CDATA[
  		select user_id, login_id, user_name, department, email, mobile, state, last_login_time, create_time, modify_time
  		]]>
  </sql>
  
  <sql id="from_xxx">
  <![CDATA[
  		from user
  		]]>
  </sql>
  
  
  <select id="findUsers" parameterType="string" resultMap="userMap">  
		SELECT  u.user_id, 
				u.login_id,
				u.user_name, 
				u.department, 
				u.email, 
				u.mobile, 
				u.state, 
				DATE_FORMAT(last_login_time,'%Y-%m-%d') as last_login_time, 
				DATE_FORMAT(create_time,'%Y-%m-%d') as create_time, 
				DATE_FORMAT(modify_time,'%Y-%m-%d') as modify_time,
				r.role_name
						
	from user u	

        JOIN user_role ur on u.user_id = ur.user_id
        JOIN role r on r.role_id = ur.role_id

       
  </select>
  
   <select id="findUserById" parameterType="string" resultMap="userMap">  
		SELECT  u.user_id, 
				u.login_id,
				u.user_name, 
				u.department, 
				u.email, 
				u.mobile,				u.state, 
				DATE_FORMAT(last_login_time,'%Y-%m-%d') as last_login_time, 
				DATE_FORMAT(create_time,'%Y-%m-%d') as create_time, 
				DATE_FORMAT(modify_time,'%Y-%m-%d') as modify_time,
				r.role_name
						
		FROM user u	
	
	        JOIN user_role ur on u.user_id = ur.user_id
	        JOIN role r on r.role_id = ur.role_id
	
		WHERE u.user_id=#{userId}
       
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.UserRole.model.User">

    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" >
 
    select user_id, user_name, department, email, mobile, state, last_login_time, create_time, 
    modify_time
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" >

    select user_id, user_name, department, email, mobile, state, last_login_time, create_time, 
    modify_time
    from user
  </select>
  
 </mapper>